name: "Data for Cover"
description: "Collect Snapshot Data for Cover Canister"

inputs:
  access_token:
    description: "Github Access Token"
    required: true
  canister_id:
    description: "Id of the canister"
    required: true
  wasm_path:
    description: "Path to the generated wasm file"
    required: true
  test:
    description: "Set to true to block sending requests to Cover backend."
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: "Collecting Cover Data"
      shell: bash
      run: |
        source ${GITHUB_ACTION_PATH}/scripts/utils.sh
        export JSON_PATH="${RUNNER_TEMP}/output.json"
        jset access_token ${{ inputs.access_token }}
        jset canister_id ${{ inputs.canister_id }}
        jset github_job $GITHUB_RUN_ID
        jset created_at $(timestamp)
        jset git_ref $GITHUB_REF
        jset git_sha $GITHUB_SHA
        jset git_repo $GITHUB_REPOSITORY
        jset wasm_path ${{ inputs.wasm_path }}
        jset wasm_checksum $(wasm_checksum ${{ inputs.wasm_path }})
        jset build_log_url "NA"
        jset source_snapshot_url "NA"

    - name: "Call Cover SQS Lambda"
      shell: bash
      if: ${{ inputs.test == "false" }}
      run: |
        # Set URL of the Lambda receiving SQS cover events
        export JSON_PATH="${RUNNER_TEMP}/output.json"
        export COVER_LAMBDA_URL="https://7d6er3977d.execute-api.us-west-2.amazonaws.com/dev/publishSqs"
        jq < $JSON_PATH
        ret=$(curl -i -X POST ${COVER_LAMBDA_URL} \
          -H "Content-Type: application/json"\
          -H "Authorized: ${{github.token}}" \
          -d "@$JSON_PATH")
        status=$?
        echo "============================================"
        echo "Status: $status"
        echo "Sent to ${COVER_LAMBDA_URL} ${ret}"
