name: Rust - PR check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'test/**'
      - 'Cargo.*'

jobs:
  format_clippy_test_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: actions/cache@v3
        name: Cache Rust
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.64.0
          components: rustfmt, clippy
          default: true
          override: true
          target: wasm32-unknown-unknown

      - name: Cache DFX
        id: cache-dfx
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/dfx
          key: ${{ runner.os }}-dfx-version-0.11.2

      - name: Install DFX
        if: steps.cache-dfx.outputs.cache-hit != 'true'
        env:
          DFX_VERSION: 0.11.2
        run: |
          echo "No DFX found. Start downloading..."
          curl -fsSL https://sdk.dfinity.org/install.sh | bash

      - name: Format Check
        run: cargo fmt --all -- --check

      - name: Clippy Check
        run: cargo clippy --all-targets --all-features -- -D warnings -D clippy::all

      - uses: actions/cache@v3
        name: Cache node
        with:
          path: test/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('test/package-lock.json') }}

      - name: Test
        run: |
          npm --prefix test ci
          make test
