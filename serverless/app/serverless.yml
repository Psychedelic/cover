service: cover
# variablesResolutionMode: 20210326

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  environment:
    STAGE: ${opt:stage, 'dev'}
    COVER_CANISTER_ID: "rrkah-fqaaa-aaaaa-aaaaq-cai"
    IDENTITY_PEM: "${ssm:cover-identity-pem}"
    QUEUE_URL: !Ref CoverQueue
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - "sqs:SendMessage"
            - "sqs:DeleteMessage"
          Resource: 
            - !GetAtt 
              - CoverQueue
              - Arn

custom:
  resourceSuffix: ${self:service.name}-${self:provider.stage}
  prune:
    automatic: true
    number: 3
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    packager: 'yarn' # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore
    includeModules:
      forceExclude:
        - aws-sdk
  serverless-offline:
    # httpsProtocol: "dev-certs"
    httpPort: 4000
    stageVariables:
      foo: "bar"

package:
  individually: true

functions:
  publish:
    timeout: 10
    memorySize: 128
    handler: src/functions/canister/publish/handler.main
    # environment:
    #   TOPIC_ARN: !Ref PinRequestTopic
    events:
      - http:
          path: /publish
          method: POST
          # request:
          #   schemas:
          #     application/json: ${file(src/functions/publish/schema.json)}
  consume:
    timeout: 10
    memorySize: 128
    handler: src/functions/canister/consume/handler.main
    events:
      - http:
          path: /consume
          method: GET
          
resources:
  - Resources:
      CoverQueue:
        Type: 'AWS::SQS::Queue'
        Properties:
          QueueName: update-queue-${self:custom.resourceSuffix}
          RedrivePolicy:
            maxReceiveCount: 10
            deadLetterTargetArn: !GetAtt 
              - CoverDeadLetterQueue
              - Arn

      CoverDeadLetterQueue:
        Type: AWS::SQS::Queue
        Properties:
          QueueName: update-dead-letter-queue-${self:custom.resourceSuffix}