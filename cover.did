type BuildConfig = record {
  updated_at : text;
  canister_id : principal;
  created_at : text;
  dfx_version : text;
  owner_id : principal;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : opt text;
  optimize_count : nat8;
};
type BuildConfigInfo = record { canister_id : principal; owner_id : principal };
type BuildStatus = variant { Error; Success };
type SaveBuildConfig = record {
  canister_id : principal;
  dfx_version : text;
  owner_id : principal;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : opt text;
  optimize_count : nat8;
};
type SubmitVerification = record {
  canister_id : principal;
  dfx_version : text;
  owner_id : principal;
  build_status : BuildStatus;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : opt text;
  optimize_count : nat8;
  build_url : text;
  wasm_hash : opt text;
};
type Verification = record {
  updated_at : text;
  updated_by : principal;
  canister_id : principal;
  dfx_version : text;
  build_status : BuildStatus;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : opt text;
  optimize_count : nat8;
  build_url : text;
  wasm_hash : opt text;
};
service : {
  addAdmin : (principal) -> ();
  addBuilder : (principal) -> ();
  addValidator : (principal) -> ();
  check : () -> (nat32) query;
  deleteAdmin : (principal) -> ();
  deleteBuildConfig : (principal) -> ();
  deleteBuilder : (principal) -> ();
  deleteValidator : (principal) -> ();
  getAllAdmins : () -> (vec principal) query;
  getAllBuildConfigs : () -> (vec BuildConfig) query;
  getAllBuilders : () -> (vec principal) query;
  getAllValidators : () -> (vec principal) query;
  getAllVerifications : () -> (vec Verification) query;
  getBuildConfigById : (principal) -> (opt BuildConfig) query;
  getBuildConfigValidator : (BuildConfigInfo) -> (opt BuildConfig) query;
  getVerificationByCanisterId : (principal) -> (opt Verification) query;
  saveBuildConfig : (SaveBuildConfig) -> ();
  submitVerification : (SubmitVerification) -> ();
  test : () -> ();
}