type AddBuildConfig = record {
  canister_id : principal;
  dfx_version : text;
  optimize_times : nat8;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : text;
};
type AddProvider = record { id : principal; memo : opt text; name : text };
type AddRequest = record {
  canister_id : principal;
  build_settings : BuildSettings;
};
type BuildConfig = record {
  updated_at : text;
  canister_id : principal;
  created_at : text;
  user_id : principal;
  dfx_version : text;
  optimize_times : nat8;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : text;
};
type BuildSettings = record { git_repo : text; git_ref : text; git_sha : text };
type Error = record { debug_log : opt text; code : text; message : text };
type Progress = record {
  request_id : nat64;
  status : ProgressStatus;
  wasm_checksum : opt text;
  updated_at : opt text;
  source_snapshot_url : opt text;
  canister_id : principal;
  git_repo : opt text;
  git_ref : opt text;
  git_sha : opt text;
  build_log_url : opt text;
  percentage : opt float32;
  started_at : text;
};
type ProgressStatus = variant { Error; Init; Finished; InProgress };
type Provider = record {
  id : principal;
  updated_at : text;
  updated_by : principal;
  memo : opt text;
  name : text;
  created_at : text;
  created_by : principal;
};
type Request = record {
  request_id : nat64;
  canister_id : principal;
  created_at : text;
  created_by : principal;
  build_settings : BuildSettings;
};
type Result = variant { Ok; Err : Error };
type Result_1 = variant { Ok : vec Request; Err : Error };
type SubmitVerification = record {
  canister_id : principal;
  dfx_version : text;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : text;
  optimize_count : nat8;
  wasm_hash : text;
};
type UpdateBuildConfig = record {
  dfx_version : text;
  optimize_times : nat8;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : text;
};
type UpdateProgress = record {
  request_id : nat64;
  status : ProgressStatus;
  wasm_checksum : opt text;
  source_snapshot_url : opt text;
  canister_id : principal;
  git_repo : opt text;
  git_ref : opt text;
  git_sha : opt text;
  build_log_url : opt text;
  percentage : opt float32;
};
type Verification = record {
  updated_at : text;
  updated_by : principal;
  canister_id : principal;
  created_at : text;
  created_by : principal;
  dfx_version : text;
  canister_name : text;
  commit_hash : text;
  repo_url : text;
  rust_version : text;
  optimize_count : nat8;
  wasm_hash : text;
};
service : {
  addAdmin : (principal) -> (Result);
  addBuildConfig : (AddBuildConfig) -> (Result);
  addProvider : (AddProvider) -> (Result);
  addRequest : (AddRequest) -> (Result);
  consumeRequests : (record {}) -> (Result_1);
  deleteAdmin : (principal) -> (Result);
  deleteBuildConfig : (principal) -> (Result);
  deleteProvider : (principal) -> (Result);
  getAllAdmins : () -> (vec principal) query;
  getAllBuildConfigs : () -> (vec BuildConfig) query;
  getAllProgresses : () -> (vec Progress) query;
  getAllProviders : () -> (vec Provider) query;
  getAllRequests : () -> (vec Request) query;
  getAllVerifications : () -> (vec Verification) query;
  getBuildConfigById : (principal) -> (opt BuildConfig) query;
  getBuildConfigProvider : (principal, principal) -> (opt BuildConfig) query;
  getProgressByCanisterId : (principal) -> (vec Progress) query;
  getProgressByRequestId : (nat64) -> (opt Progress) query;
  getProviderById : (principal) -> (opt Provider) query;
  getRequestById : (nat64) -> (opt Request) query;
  getVerificationByCanisterId : (principal) -> (opt Verification) query;
  submitVerification : (principal, SubmitVerification) -> (Result);
  updateBuildConfig : (principal, UpdateBuildConfig) -> (Result);
  updateProgress : (UpdateProgress) -> (Result);
  updateProvider : (AddProvider) -> (Result);
}